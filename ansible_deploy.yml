---
- hosts: Docker
  vars_prompt:
  - name: "Docker_EE_URL"
    prompt: "Enter your Docker EE Docker"
    private: no

  tasks:
    - name: Update Packages
      yum: name='*' state=latest

    - name: Copy Hosts File
      copy: src="/etc/hosts" dest="/etc/hosts"

    - name: Open port 443
      command: firewall-cmd --permanent --zone=public --add-port=443/tcp
    - name: Open ports 2375-2376
      command: firewall-cmd --permanent --zone=public --add-port=2375-2376/tcp
    - name: Open port 4789/tcp
      command: firewall-cmd --permanent --zone=public --add-port=4789/tcp
    - name: Open port 4789/udp
      command: firewall-cmd --permanent --zone=public --add-port=4789/udp
    - name: Open ports 12379-12385/tcp
      command: firewall-cmd --permanent --zone=public --add-port=12379-12385/tcp
    - name: Open ports 2377/tcp
      command: firewall-cmd --permanent --zone=public --add-port=2377/tcp
    - name: Open ports 7946/tcp
      command: firewall-cmd --permanent --zone=public --add-port=7946/tcp
    - name: Open ports 7946/udp
      command: firewall-cmd --permanent --zone=public --add-port=7946/udp
    - name: Open ports 12386/tcp
      command: firewall-cmd --permanent --zone=public --add-port=12386/tcp
    - name: Open ports 12387/tcp
      command: firewall-cmd --permanent --zone=public --add-port=12387/tcp
    - name: Open ports 12376/tcp
      command: firewall-cmd --permanent --zone=public --add-port=12376/tcp

    - name: Restart Firewall Services
      service: name=firewalld state=restarted

    - name: Create Docker URL File
      shell: sh -c 'echo "{{Docker_EE_URL}}/centos" > /etc/yum/vars/dockerurl'
    
    - name: Install Yum Utils
      yum: name=yum-utils state=present

    - name: Configure Docker EE Repo
      shell: "yum-config-manager --add-repo '{{Docker_EE_URL}}/centos/docker-ee.repo' update_cache=yes"

    - name: Install Docker EE  
      yum: name=docker-ee state=present

    - name: Install LVM
      yum: name=lvm2 state=present

    - name: Setup Storage pvCreate
      shell: "pvcreate /dev/sdb"

    - name: Setup Storage vgCreate
      shell: "vgcreate docker /dev/sdb"

    - name: Set Percentages for thinpool
      shell: "lvcreate --wipesignatures y -n thinpool docker -l 95%VG"

    - name: Set Percentages for meta pool
      shell: "lvcreate --wipesignatures y -n thinpoolmeta docker -l 1%VG"

    - name: Convert 
      shell: "lvconvert -y --zero n -c 512K --thinpool docker/thinpool --poolmetadata docker/thinpoolmeta"

    - name: Create thinpool profile
      copy:
        content: ""
        dest: /etc/lvm/profile/docker-thinpool.profile

    - name: Set Percentages
      blockinfile: |
        dest=/etc/lvm/profile/docker-thinpool.profile
        content="activation {
        thin_pool_autoextend_threshold=80
        thin_pool_autoextend_percent=20
        }"

    - name: Change Profile to thinpool profile
      shell: "lvchange --metadataprofile docker-thinpool docker/thinpool"

    - name: Monitor
      shell: "lvs -o+seg_monitor"

    - name: Create Docker Configuration Directory
      file: path=/etc/docker state=directory

    - name: Create Docker Config File
      copy:
        content: ""
        dest: /etc/docker/daemon.json

    - name: Set Options in Docker Configuration for LVM
      blockinfile: | 
        dest=/etc/docker/daemon.json
        marker=
        content="{
          "storage-driver": "devicemapper",
          "storage-opts": [
          "dm.thinpooldev=/dev/mapper/docker-thinpool",
          "dm.use_deferred_removal=true",
          "dm.use_deferred_deletion=true"
          ]
        }"

    - name: Enable Docker Services
      shell: "/usr/bin/systemctl enable docker.service"

    - name: Start Docker Services
      shell: "/usr/bin/systemctl start docker.service"
